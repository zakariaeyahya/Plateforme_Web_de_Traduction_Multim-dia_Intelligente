import streamlit as st
import tempfile
import os

from controllers.text_controller import TextController
from controllers.pdf_controller import PDFController
from controllers.video_controller import VideoController
from controllers.audio_controller import AudioController
from controllers.text_file_controller import TextFileController
from services.service_functions import clean_output
from services.service_functions.text_file_functions import read_text_file

# Initialize controllers with necessary configurations
FFMPEG_PATH = r"C:\Users\HP\anaconda3\pkgs\ffmpeg-4.3.1-ha925a31_0\Library\bin\ffmpeg.exe"
text_controller = TextController()
pdf_controller = PDFController()
text_file_controller = TextFileController()
video_controller = VideoController(ffmpeg_path=FFMPEG_PATH)
audio_controller = AudioController(ffmpeg_path=FFMPEG_PATH)

# Streamlit page configuration
st.set_page_config(page_title="Traducteur Multim√©dia", layout="wide")

# Custom CSS for styling
st.markdown("""
<style>
    .main-title {
        font-size: 3em;
        color: #1E90FF;
        text-align: center;
        margin-bottom: 30px;
    }
    .sub-title {
        font-size: 1.5em;
        color: #4682B4;
        margin-bottom: 20px;
    }
    .stButton>button {
        width: 100%;
        background-color: #4CAF50;
        color: white;
        padding: 10px;
        font-size: 16px;
        border: none;
        border-radius: 5px;
    }
    .stTextInput>div>div>input {
        background-color: #F0F8FF;
    }
    .output-area {
        background-color: #F0F8FF;
        padding: 10px;
        border-radius: 5px;
        margin-top: 20px;
    }
    .content {
        font-size: 1.1em;
        line-height: 1.6;
    }
    .sidebar-nav {
        padding: 10px;
        border-radius: 10px;
        background-color: #f0f2f6;
    }
    .sidebar-nav h1 {
        color: #1E90FF;
        font-size: 24px;
        margin-bottom: 20px;
        text-align: center;
    }
    .nav-item {
        padding: 10px;
        margin: 5px 0;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }
    .nav-item:hover {
        background-color: #e0e2e6;
    }
    .nav-item.active {
        background-color: #1E90FF;
        color: white;
    }
</style>
""", unsafe_allow_html=True)

# Sidebar navigation setup
st.sidebar.markdown('<div class="sidebar-nav">', unsafe_allow_html=True)
st.sidebar.markdown('<h1>Navigation</h1>', unsafe_allow_html=True)

# Define the available pages
pages = {
    "Accueil": "Accueil",
    "Traduction": "Traduction",
    "√Ä Propos": "√Ä Propos"
}

# Initialize session state if it doesn't exist
if "page" not in st.session_state:
    st.session_state.page = "Accueil"

# Use a radio button for navigation
page = st.sidebar.radio(
    "",
    options=list(pages.keys()),
    key="page",
    label_visibility="collapsed"
)

# No need to set st.session_state.page here; it's already managed by the radio button

st.sidebar.markdown('</div>', unsafe_allow_html=True)

# Page-specific content rendering
if page == "Accueil":
    st.markdown("<h1 class='main-title'>Traducteur Multim√©dia Sp√©cialis√© en Darija üá≤üá¶</h1>", unsafe_allow_html=True)
    st.markdown("*\"Connecter le Maroc au monde, un mot √† la fois.\"*")

    st.header("üåü Notre Mission")
    st.write("""
    Bienvenue dans notre projet innovant de Traducteur Multim√©dia, sp√©cialement con√ßu pour briser les barri√®res linguistiques 
    entre le darija marocain et les langues du monde entier. Notre mission est de faciliter la communication, la compr√©hension 
    et l'√©change culturel en rendant le darija accessible √† tous, et en ouvrant le Maroc aux langues internationales.
    """)

    st.header("üöÄ Pourquoi le Darija ?")
    st.write("""
    Le darija, dialecte  marocain, est au c≈ìur de la culture et de la communication quotidienne au Maroc. Cependant, 
    sa richesse et sa complexit√© peuvent √™tre un d√©fi pour les non-locuteurs. Notre traducteur est con√ßu pour :
    
    - Faciliter la compr√©hension du darija pour les visiteurs et les entreprises internationales
    - Aider les Marocains √† communiquer plus efficacement √† l'√©chelle mondiale
    - Pr√©server et promouvoir la richesse linguistique du Maroc
    """)

    st.header("üõ† Nos Fonctionnalit√©s Uniques")
    col1, col2 = st.columns(2)
    with col1:
        st.subheader("üìù Texte Darija Intelligent")
        st.write("Notre IA comprend les nuances et les expressions idiomatiques du darija, assurant des traductions pr√©cises et naturelles.")
        
        st.subheader("üé• Vid√©os en Darija D√©cod√©es")
        st.write("Transformez vos vid√©os en darija avec des sous-titres et des traductions dans de nombreuses langues.")
    with col2:
        st.subheader("üîä Audio Darija Amplifi√©")
        st.write("Transcrivez et traduisez des conversations en darija, rendant les podcasts et les enregistrements accessibles √† tous.")
        
        st.subheader("üìö Documents Multilingues")
        st.write("Traduisez des documents officiels, des articles et des livres du darija vers d'autres langues et vice versa.")

    st.header("üåç Impact sur la Communication Interculturelle")
    st.write("""
    Notre projet vise √† :
    1. Renforcer les liens √©conomiques en facilitant la communication d'affaires
    2. Promouvoir le tourisme en rendant le Maroc plus accessible linguistiquement
    3. Faciliter les √©changes √©ducatifs et culturels internationaux
    4. Pr√©server et partager la richesse du patrimoine linguistique marocain
    """)

    st.header("üöÄ Comment Utiliser Notre Traducteur")
    st.markdown("""
    1. üß≠ Naviguez vers l'onglet "Traduction" dans le menu lat√©ral.
    2. üìä S√©lectionnez votre type de m√©dia (texte, audio, vid√©o, document).
    3. üåê Choisissez le darija comme langue source ou cible.
    4. üì§ T√©l√©chargez votre fichier ou entrez votre texte en darija.
    5. ‚ú® Laissez notre IA travailler sa magie et d√©couvrez votre traduction !
    """)

    st.header("üîÆ L'Avenir de la Traduction Darija")
    st.write("""
    Nous travaillons continuellement √† l'am√©lioration de notre technologie pour:
    - Int√©grer plus de variations r√©gionales du darija
    - D√©velopper des mod√®les de traduction sp√©cifiques √† diff√©rents domaines (m√©dical, juridique, technique)
    - Cr√©er des outils d'apprentissage du darija bas√©s sur l'IA
    
    Rejoignez-nous dans cette aventure linguistique passionnante et contribuez √† rapprocher les cultures gr√¢ce √† la puissance de la traduction !
    """)

    st.markdown("---")
    st.markdown("<p style='text-align: center;'>D√©velopp√© avec passion par  YAHYA ZAKARIAE </p>", unsafe_allow_html=True)
elif page == "Traduction":
    st.markdown("<h1 class='main-title'>Traducteur Multim√©dia</h1>", unsafe_allow_html=True)

    # Input type selection
    input_type = st.selectbox("Choisissez le type d'entr√©e", ["Texte", "Fichier PDF", "Vid√©o", "Audio", "Fichier Texte"])

    # Language selection
    col1, col2 = st.columns(2)
    with col1:
        input_lang = st.selectbox("Langue source", ["fran√ßais", "anglais", "arabe", "darija"])
    with col2:
        output_lang = st.selectbox("Langue cible", ["fran√ßais", "anglais", "arabe", "darija"])

    # Processing based on input type
    if input_type == "Texte":
        st.markdown("<h2 class='sub-title'>Traduction de Texte</h2>", unsafe_allow_html=True)
        input_text = st.text_area("Entrez le texte √† traduire")

        if st.button("Traduire le Texte"):
            with st.spinner("Traduction en cours..."):
                result = text_controller.translate_text(input_text, input_lang, output_lang)
                if result["status"] == "success":
                    st.markdown("<div class='output-area'>", unsafe_allow_html=True)
                    st.text_area("Texte traduit", result["translated_text"], height=200)
                    st.markdown("</div>", unsafe_allow_html=True)
                else:
                    st.error(f"Une erreur s'est produite : {result['message']}")

    elif input_type == "Fichier PDF":
        st.markdown("<h2 class='sub-title'>Traduction de PDF</h2>", unsafe_allow_html=True)
        pdf_file = st.file_uploader("T√©l√©chargez le fichier PDF", type=["pdf"])

        if pdf_file:
            with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as temp_pdf:
                temp_pdf.write(pdf_file.read())
                temp_pdf_path = temp_pdf.name
            
            try:
                paragraph_count, _ = pdf_controller.count_paragraphs_in_pdf(temp_pdf_path)
                st.write(f"Le PDF contient {paragraph_count} paragraphes.")
                
                translate_option = st.radio("Choisissez une option de traduction :", 
                                            ("Tout le PDF", "Une plage de paragraphes"))
                
                start_paragraph, end_paragraph = None, None
                if translate_option == "Une plage de paragraphes":
                    col1, col2 = st.columns(2)
                    with col1:
                        start_paragraph = st.number_input("Du paragraphe :", 
                                                          min_value=1, max_value=paragraph_count, value=1)
                    with col2:
                        end_paragraph = st.number_input("Au paragraphe :", 
                                                        min_value=start_paragraph, max_value=paragraph_count, value=min(start_paragraph+2, paragraph_count))

                if st.button("Traduire le PDF"):
                    with st.spinner("Traduction en cours..."):
                        result = pdf_controller.translate_pdf(temp_pdf_path, input_lang, output_lang, start_paragraph, end_paragraph)
                        if result["status"] == "success":
                            st.markdown("<div class='output-area'>", unsafe_allow_html=True)
                            st.text_area("Texte traduit", result["translated_text"], height=300)
                            st.markdown("</div>", unsafe_allow_html=True)
                        else:
                            st.error(f"Une erreur s'est produite : {result['message']}")
            finally:
                os.remove(temp_pdf_path)

    elif input_type == "Vid√©o":
        st.markdown("<h2 class='sub-title'>Traduction de Vid√©o</h2>", unsafe_allow_html=True)
        video_file = st.file_uploader("T√©l√©chargez le fichier vid√©o", type=["mp4"])

        if video_file:
            with tempfile.NamedTemporaryFile(delete=False, suffix=".mp4") as temp_video:
                temp_video.write(video_file.read())
                temp_video_path = temp_video.name
            
            try:
                duration = video_controller.get_video_duration(temp_video_path)
                st.write(f"La dur√©e de la vid√©o est de {duration} secondes.")
                
                translate_option = st.radio("Choisissez une option de traduction :", 
                                            ("Toute la vid√©o", "Une plage de temps sp√©cifique"))
                
                start_second, end_second = None, None
                if translate_option == "Une plage de temps sp√©cifique":
                    col1, col2 = st.columns(2)
                    with col1:
                        start_second = st.number_input("De la seconde :", 
                                                       min_value=0, max_value=duration-1, value=0)
                    with col2:
                        end_second = st.number_input("√Ä la seconde :", 
                                                     min_value=start_second+1, max_value=duration, value=min(start_second+60, duration))

                if st.button("Transcrire et Traduire la Vid√©o"):
                    with st.spinner("Traitement de la vid√©o en cours..."):
                        result = video_controller.transcribe_and_translate_video(temp_video_path, input_lang, output_lang, start_second, end_second)
                        if result["status"] == "success":
                            st.markdown("<div class='output-area'>", unsafe_allow_html=True)
                            st.text_area("Transcription", result["transcription"], height=200)
                            st.text_area("Traduction", result["translation"], height=200)
                            st.markdown("</div>", unsafe_allow_html=True)
                            
                            # Add download option for results
                            result_text = f"Transcription:\n{result['transcription']}\n\nTraduction:\n{result['translation']}"
                            st.download_button(
                                label="T√©l√©charger les r√©sultats",
                                data=result_text.encode('utf-8'),
                                file_name="video_translation_results.txt",
                                mime="text/plain"
                            )
                        else:
                            st.error(f"Une erreur s'est produite : {result['message']}")
            finally:
                os.remove(temp_video_path)

    elif input_type == "Audio":
        st.markdown("<h2 class='sub-title'>Traitement Audio</h2>", unsafe_allow_html=True)
        audio_file = st.file_uploader("T√©l√©chargez le fichier audio", type=["mp3", "opus", "wav"])
        audio_type = st.selectbox("S√©lectionnez le type audio", ["mp3", "opus", "wav"])

        if audio_file:
            with tempfile.NamedTemporaryFile(delete=False, suffix='.' + audio_type) as temp_audio:
                temp_audio.write(audio_file.read())
                temp_audio_path = temp_audio.name
            
            try:
                duration = audio_controller.get_audio_duration(temp_audio_path)
                st.write(f"La dur√©e de l'audio est de {duration} secondes.")
                
                translate_option = st.radio("Choisissez une option de traduction :", 
                                            ("Tout l'audio", "Une plage de temps sp√©cifique"))
                
                start_second, end_second = None, None
                if translate_option == "Une plage de temps sp√©cifique":
                    col1, col2 = st.columns(2)
                    with col1:
                        start_second = st.number_input("De la seconde :", 
                                                       min_value=0, max_value=duration-1, value=0)
                    with col2:
                        end_second = st.number_input("√Ä la seconde :", 
                                                     min_value=start_second+1, max_value=duration, value=min(start_second+10, duration))

                if st.button("Transcrire et Traduire l'Audio"):
                    with st.spinner("Traitement audio en cours..."):
                        output_csv = tempfile.NamedTemporaryFile(delete=False, suffix=".csv").name
                        result = audio_controller.process_audio(temp_audio_path, input_lang, output_lang, output_csv, audio_type, start_second, end_second)
                        if result["status"] == "success":
                            st.markdown("<div class='output-area'>", unsafe_allow_html=True)
                            st.text_area("Transcription", result["transcription"], height=200)
                            st.text_area("Traduction", result["translation"], height=200)
                            st.markdown("</div>", unsafe_allow_html=True)
                        else:
                            st.error(f"Une erreur s'est produite : {result['message']}")
            finally:
                os.remove(temp_audio_path)
                if 'output_csv' in locals() and os.path.exists(output_csv):
                    os.remove(output_csv)

    elif input_type == "Fichier Texte":
        st.markdown("<h2 class='sub-title'>Traduction de Fichier Texte</h2>", unsafe_allow_html=True)
        text_file = st.file_uploader("T√©l√©chargez le fichier texte", type=["txt"])

        if text_file:
            with tempfile.NamedTemporaryFile(delete=False, suffix=".txt") as temp_txt:
                temp_txt.write(text_file.read())
                temp_txt_path = temp_txt.name
            
            try:
                file_content = read_text_file(temp_txt_path)
                total_lines = len(file_content.splitlines())
                st.write(f"Le fichier contient {total_lines} lignes.")
                
                translate_option = st.radio("Choisissez une option de traduction :", 
                                            ("Tout le fichier", "Une plage de lignes sp√©cifique"))
                
                start_line, end_line = None, None
                if translate_option == "Une plage de lignes sp√©cifique":
                    col1, col2 = st.columns(2)
                    with col1:
                        start_line = st.number_input("De la ligne :", 
                                                     min_value=1, max_value=total_lines, value=1)
                    with col2:
                        end_line = st.number_input("√Ä la ligne :", 
                                                   min_value=start_line, max_value=total_lines, value=min(start_line+10, total_lines))

                if st.button("Traduire le fichier texte"):
                    with st.spinner("Traduction en cours..."):
                        result = text_file_controller.translate_text_file(temp_txt_path, input_lang, output_lang, start_line, end_line)
                        if result["status"] == "success":
                            st.markdown("<div class='output-area'>", unsafe_allow_html=True)
                            st.text_area("Texte traduit", result["translated_text"], height=300)
                            st.markdown("</div>", unsafe_allow_html=True)
                            
                            # Add download option for translated text
                            translated_file = result["translated_text"].encode('utf-8')
                            st.download_button(
                                label="T√©l√©charger la traduction",
                                data=translated_file,
                                file_name="traduction.txt",
                                mime="text/plain"
                            )
                        else:
                            st.error(f"Une erreur s'est produite : {result['message']}")
            finally:
                os.remove(temp_txt_path)

elif page == "√Ä Propos":
    st.markdown("<h1 class='main-title'>√Ä Propos du Projet üåü</h1>", unsafe_allow_html=True)

    st.markdown("## üìö R√©sum√© du Projet")

    st.markdown("üöÄ Le Traducteur Multim√©dia est une initiative novatrice visant √† transformer radicalement l'approche de la traduction dans notre √®re num√©rique globalis√©e. En exploitant les derni√®res avanc√©es en mati√®re de traitement du langage naturel et d'intelligence artificielle, notre plateforme propose une solution int√©gr√©e et polyvalente pour transcender les barri√®res linguistiques √† travers une multitude de formats m√©dias.")

    st.markdown("üåç Notre ambition est de fa√ßonner un monde o√π la diversit√© linguistique enrichit la communication plut√¥t que de l'entraver. Que ce soit dans un cadre professionnel, √©ducatif ou personnel, notre outil est con√ßu pour d√©mocratiser l'acc√®s √† une traduction rapide, pr√©cise et contextuelle, favorisant ainsi une compr√©hension mutuelle sans pr√©c√©dent.")

    st.markdown("üí° L'unicit√© de notre projet r√©side dans sa capacit√© √† traiter un large √©ventail de supports : du texte brut aux documents PDF, en passant par les contenus vid√©o et audio. Cette approche holistique offre aux utilisateurs la flexibilit√© de traduire des contenus vari√©s, catalysant ainsi les √©changes d'informations et la collaboration √† l'√©chelle internationale. En repoussant les fronti√®res de la traduction conventionnelle, nous ouvrons la voie √† une nouvelle √®re de communication interculturelle fluide et enrichissante.")

    st.markdown("<h2 class='sub-title'>üõ†Ô∏è Fonctionnalit√©s Cl√©s</h2>", unsafe_allow_html=True)


    st.markdown("""
    <div class='content'>
        <ul>
            <li>üìù Traduction de texte avec prise en charge de multiples langues</li>
            <li>üìÑ Traduction de fichiers PDF avec option de s√©lection de plages de paragraphes</li>
            <li>üé• Transcription et traduction de fichiers vid√©o</li>
            <li>üéµ Traitement et traduction de fichiers audio</li>
            <li>üìÅ Traduction de fichiers texte avec option de s√©lection de plages de lignes</li>
            <li>üîÑ Interface utilisateur intuitive et conviviale</li>
        </ul>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("<h2 class='sub-title'>üîÆ Travaux Futurs</h2>", unsafe_allow_html=True)

    st.markdown("""
    <div class='content'>
        <p>üå± Notre projet est en constante √©volution, et nous avons de nombreuses id√©es passionnantes pour l'avenir :</p>
        <ul>
            <li>üåê Int√©gration de plus de langues et de dialectes, avec un focus particulier sur les langues moins repr√©sent√©es</li>
            <li>üß† Am√©lioration de la pr√©cision de la traduction gr√¢ce √† des mod√®les de langage plus avanc√©s et √† l'apprentissage continu</li>
            <li>‚ö° Ajout de fonctionnalit√©s de traduction en temps r√©el pour les flux audio et vid√©o, id√©al pour les conf√©rences et les webinaires</li>
            <li>üîó D√©veloppement d'une API robuste pour permettre l'int√©gration transparente avec d'autres applications et services</li>
            <li>üé® Refonte de l'interface utilisateur pour une exp√©rience encore plus intuitive et personnalisable</li>
            <li>üìä Int√©gration d'outils d'analyse avanc√©s pour fournir des insights sur les traductions et l'utilisation</li>
            <li>üì± D√©veloppement d'applications mobiles pour iOS et Android pour une accessibilit√© accrue</li>
        </ul>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("<h2 class='sub-title'>ü§ù Contribuer au Projet</h2>", unsafe_allow_html=True)

    st.markdown("""
    <div class='content'>
        <p>üåü Nous croyons en la puissance de la collaboration et de l'open source. Si vous √™tes passionn√© par les langues, 
        la technologie ou simplement int√©ress√© par notre projet, il existe plusieurs fa√ßons de contribuer :</p>
        <ul>
            <li>üíª Contribuer au code source sur notre d√©p√¥t GitHub</li>
            <li>üîç Tester l'application et signaler des bugs ou sugg√©rer des am√©liorations</li>
            <li>üìñ Aider √† am√©liorer la documentation et les guides d'utilisation</li>
            <li>üåç Participer √† la traduction de l'interface utilisateur dans diff√©rentes langues</li>
            <li>üí° Proposer de nouvelles id√©es de fonctionnalit√©s ou d'am√©liorations</li>
        </ul>
        <p>Chaque contribution, quelle que soit sa taille, est pr√©cieuse et appr√©ci√©e !</p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("<h2 class='sub-title'>üì¨ Contact</h2>", unsafe_allow_html=True)

    st.markdown("""
    <div class='content'>
        <p>üßë‚Äçüíª Ce projet a √©t√© d√©velopp√© avec passion par Yahya Zakariae. Pour toute question, suggestion ou opportunit√© de collaboration, n'h√©sitez pas √† me contacter :</p>
        <ul>
            <li>üìß Email : zakariae.yh@gmail.com </li>
            <li>üîó LinkedIn : <a href="https://www.linkedin.com/in/zakariae-yahya/">linkedin.com/in/yahyazakariae</a></li>
            <li>üê± GitHub : <a href="https://github.com/zakariaeyahya">github.com/yahyazakariae</a></li>
        </ul>
        <p>üí¨ Je suis toujours ouvert aux retours, aux id√©es et aux discussions sur la fa√ßon d'am√©liorer cette application et 
        de la rendre encore plus utile pour notre communaut√© mondiale. N'h√©sitez pas √† partager vos pens√©es et vos exp√©riences !</p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("<h2 class='sub-title'>üôè Remerciements</h2>", unsafe_allow_html=True)

    st.markdown("""
    <div class='content'>
        <p>Un grand merci √† tous ceux qui ont contribu√© √† ce projet, que ce soit par leur code, leurs id√©es ou leur soutien. 
        Ce projet n'aurait pas √©t√© possible sans la riche communaut√© open-source et les nombreuses biblioth√®ques et 
        frameworks sur lesquels il s'appuie.</p>
        <p>Ensemble, continuons √† construire des ponts entre les langues et les cultures ! üåâüåç</p>
    </div>
    """, unsafe_allow_html=True)

st.markdown("---")
st.markdown("<p style='text-align: center;'>D√©velopp√© avec ‚ù§Ô∏è par Yahya Zakariae</p>", unsafe_allow_html=True)
